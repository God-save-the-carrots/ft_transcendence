worker_processes 1; events { worker_connections 1024; }

http {
	include /etc/nginx/mime.types;
	root /var/www/html;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_certificate /etc/ssl/certs/server.crt;
    ssl_certificate_key /etc/ssl/certs/private.key;

    log_format transcendence escape=json
    '{'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"time_local":"$time_local",'
        '"request":"$request",'
        '"status":"$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"http_x_forwarded_for":"$http_x_forwarded_for"'
    '}';
    access_log syslog:server=logstash transcendence;

	server {
		listen 443 ssl;
		index index.html;
		location / {
			try_files $uri /$uri /public/index.html;
		}

		location /api/ {
            # 백엔드 서버의 URL
            proxy_pass http://backend:8000;
            proxy_set_header Host $http_host;

            # CORS 헤더 추가
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, PUT, PATCH, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept' always;

            # Preflight 요청 처리
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, PUT, PATCH, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' '0';
                return 204;
            }
        }
	}

    server {
        listen 4000 ssl;

        location / {
            proxy_pass http://backend:4444;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Accept-Encoding ""; 
        }
    }
}
