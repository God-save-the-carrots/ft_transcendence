version: "3.8"

services:
  frontend:
    image: ${FRONTEND_IMAGE_NAME}:${FRONTEND_IMAGE_TAG}
    container_name: ${FRONTEND_CONTAINER_NAME}
    build:
      context: ./frontend
    env_file:
      - .env
    stdin_open: true
    tty: true
    working_dir: /src
    ports:
      - 80:80
    volumes:
      - ./frontend:/src
    depends_on:
      - db
      - backend

  backend:
    image: ${BACKEND_IMAGE_NAME}:${BACKEND_IMAGE_TAG}
    container_name: ${BACKEND_CONTAINER_NAME}
    build:
      context: ./backend
    env_file:
      - .env
    stdin_open: true
    tty: true
    working_dir: /src
    ports:
      - 8080:8080
    volumes:
      - ./backend:/src
      - run_vol:/var/run
      - cache_vol:/var/cache
    command: python manage.py runserver 0.0.0.0:8080
    depends_on:
      - db

  db:
    image: postgres:16.1-alpine3.19
    container_name: ${DATABASE_CONTAINER_NAME}
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - PGUSER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - ${DATABASE_VOLUME}:/var/lib/postgresql/data

volumes:
  run_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  cache_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
