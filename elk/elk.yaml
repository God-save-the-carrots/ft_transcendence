version: "3.8"

services:
  certs:
    user: "0"
    image: elasticsearch:${STACK_VERSION}
    volumes:
      - ./certs:/usr/share/elasticsearch/config/certs
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD?ELastic password is required}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD?Kibana password is required}
    command: >
      bash -c '
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://elasticsearch:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u elastic:${ELASTIC_PASSWORD} -H "Content-Type: application/json" https://elasticsearch:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
        echo "All done!";
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/elasticsearch/elasticsearch.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120

  elasticsearch:
    depends_on:
      certs:
        condition: service_healthy
    image: elasticsearch:${STACK_VERSION}
    ports:
      - ${ES_PORT}:9200
    volumes:
      - ./certs:/usr/share/elasticsearch/config/certs
      - ./elasticsearch:/usr/share/elasticsearch/data
    environment:
        - ELASTIC_PASSWORD=${ELASTIC_PASSWORD?ELastic password is required}
        - discovery.type=single-node
        - bootstrap.memory_lock=true
        - xpack.security.enabled=true
        - xpack.security.transport.ssl.enabled=true
        - xpack.security.transport.ssl.key=certs/elasticsearch/elasticsearch.key
        - xpack.security.transport.ssl.certificate=certs/elasticsearch/elasticsearch.crt
        - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
        - xpack.security.transport.ssl.verification_mode=certificate
        - xpack.security.http.ssl.enabled=true
        - xpack.security.http.ssl.key=certs/elasticsearch/elasticsearch.key
        - xpack.security.http.ssl.certificate=certs/elasticsearch/elasticsearch.crt
        - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
        - xpack.security.http.ssl.verification_mode=certificate
        - xpack.license.self_generated.type=${LICENSE}    
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120